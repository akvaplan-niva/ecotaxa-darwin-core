import {
  assertEquals,
  assertObjectMatch,
} from "https://deno.land/std/testing/asserts.ts";
import { occurrenceMapFactory } from "./occurrence-map.js";
import {
  countryCode,
  ecotaxaDOIObject,
  project,
} from "./_test/doi-export-1-line.js";

const { test } = Deno;

const expected = {
  scientificName: "Calanus",
  lifeStage: undefined,
  organismQuantity: 1,
  organismQuantityType: "individuals",
  occurrenceStatus: "present",
  eventDate: "2018-10-01T12:00:00Z",
  fieldNumber: "c_2_01102018",
  catalogNumber: "C_2_01102018_tot_1_706",
  locality: "Station1",
  basisOfRecord: "MachineObservation",
  verbatimEventDate: "20181001T120000",
  decimalLongitude: 21.166667,
  decimalLatitude: 70.416667,
  maximumDepthInMeters: 3,
  minimumDepthInMeters: 2,
  eventRemarks: "halocline",
  identificationRemarks:
    "living>Eukaryota>Opisthokonta>Holozoa>Metazoa>Arthropoda>Crustacea>Maxillopoda>Copepoda>Calanoida>Calanidae>Calanus",
  datasetID: "26363c61-01fd-5797-9c92-f6243374b769",
  occurrenceID: "46b7ac5b-2bc2-5905-9408-a21aa11e5cb3",
  eventID: "10e9a6cc-e9cb-5b7e-be07-c3528ffab99c",
  parentEventID: "26363c61-01fd-5797-9c92-f6243374b769",
  countryCode: "NO",
  geodeticDatum: "WGS84",
  coordinateUncertaintyInMeters: 30,
  dateIdentified: "2019-01-17T10:45:09Z",
  identificationVerificationStatus: "validated",
  datasetName: undefined,
  identifiedBy: "https://ecotaxa.obs-vlfr.fr | Some Person",
  associatedMedia: "images/Calanus/106561382_0.jpg",
  samplingEffort: "150 µm mesh",
  samplingProtocol: "homemade",
  sampleSizeValue: 99999,
  sampleSizeUnit: "m3",
};

const expectedDynamic = {
  object_link: 0,
  object_annotation_person_email: "email@example.org",
  object_annotation_category: "Calanus",
  img_rank: 0,
  object_lat_end: 70.4166666666667,
  object_lon_end: 21.1666666666667,
  object_area: 9080,
  object_mean: 224.43,
  object_stddev: 30.685,
  object_mode: 243,
  object_min: 119,
  object_max: 249,
  object_x: 78.84,
  object_y: 92.39,
  object_xm: 79.78,
  object_ym: 92.33,
  object_perim: 2291.96,
  object_bx: 14463,
  object_by: 16725,
  object_width: 176,
  object_height: 151,
  object_major: 115.5,
  object_minor: 100.1,
  object_angle: 7.2,
  object_circ: 0.022,
  object_feret: 177.1,
  object_intden: 2037798,
  object_median: 240,
  object_skew: -1.779,
  object_kurt: 1.918,
  object_xstart: 14527,
  object_ystart: 16725,
  object_area_exc: 8302,
  object_fractal: 1.476,
  object_skelarea: 2605,
  object_slope: 1.858,
  object_histcum1: 217,
  object_histcum2: 238,
  object_histcum3: 241,
  object_xmg5: 0,
  object_ymg5: 0,
  object_nb1: 1,
  object_nb2: 2,
  object_nb3: 0,
  object_compentropy: 0,
  object_compmean: 0,
  object_compslope: 0,
  object_compm1: 0,
  object_compm2: 0,
  object_compm3: 0,
  object_symetrieh: 3.76,
  object_symetriev: 3.738,
  object_symetriehc: 5,
  object_symetrievc: 5,
  object_convperim: 650,
  object_convarea: 16370,
  object_fcons: 106.12,
  object_thickr: 4.667,
  object_tag: 1,
  object_esd: 107.522160814389,
  object_elongation: 1.16,
  object_range: 130,
  object_meanpos: -0.233045622688039,
  object_centroids: 1,
  object_cv: 13.8127701287707,
  object_sr: 23.8461538461538,
  object_perimareaexc: 25.1549378567838,
  object_feretareaexc: 1.94259336852126,
  object_perimferet: 12.9491525423729,
  object_perimmajor: 19.7586206896552,
  object_circex: 0.019859273937196,
  object_cdexc: 0.0109751037769563,
  sample_dataportal_descriptor: 0,
  sample_scan_operator: "who",
  sample_program: 0,
  sample_bottomdepth: 99999,
  sample_ctdrosettefilename: 0,
  sample_other_ref: 0,
  sample_tow_nb: 1,
  sample_tow_type: 3,
  sample_net_surf: 99999,
  sample_zmax: 3,
  sample_zmin: 2,
  sample_tot_vol_qc: 0,
  sample_depth_qc: 0,
  sample_sample_qc: 1111,
  sample_barcode: 0,
  sample_duration: 30,
  sample_ship_speed: 99999,
  sample_cable_length: 99999,
  sample_cable_angle: 99999,
  sample_cable_speed: 99999,
  sample_nb_jar: 1,
  sample_open: 0,
  process_id: "zooprocess_c_2_01102018",
  process_date: 20190106,
  process_time: 232600,
  process_img_software_version: "7.21_picheral_cnrs",
  process_img_resolution: 4800,
  process_img_od_grey: 0,
  process_img_od_std: 0,
  process_img_background_img: "20181110_1044_background_narrow_manual.tif",
  process_particle_version: "6.15_2009/10/25_picheral_cnrs",
  process_particle_threshold: 243,
  process_particle_pixel_size_mm: 0.0053,
  process_particle_min_size_mm: 0.3,
  process_particle_max_size_mm: 100,
  process_particle_sep_mask: "include",
  process_particle_bw_ratio: 0,
  process_software: "zooprocess_pid_to_ecotaxa_7.26_2017/12/01",
  acq_id: "tot_c_2_01102018",
  acq_instrument: "zooscan",
  acq_min_mesh: 150,
  acq_max_mesh: 999999,
  acq_sub_part: 1,
  acq_sub_method: "motoda",
  acq_hardware: "hydroptic_v3_window7",
  acq_software: "vuescan9.0.51",
  acq_author: "khs",
  acq_imgtype: 0,
  acq_scan_date: 20181110,
  acq_scan_time: 172900,
  acq_quality: 0,
  acq_bitpixel: 3,
  acq_greyfrom: 2,
  acq_scan_resolution: 2,
  acq_rotation: 3,
  acq_miror: 1,
  acq_xsize: 21984,
  acq_ysize: 46464,
  acq_xoffset: 9900,
  acq_yoffset: 5010,
  acq_lut_color_balance: "manual",
  acq_lut_filter: "no",
  acq_lut_min: 724,
  acq_lut_max: 60493,
  acq_lut_odrange: 1.8,
  acq_lut_ratio: 1.15,
  acq_lut_16b_median: 52603.2,
};

test(`occurrence map yields { "scientificName: "Calanus", "occurrenceStatus": "present" […], country: "${countryCode}, […] }" , `, () => {
  const mapperfx = occurrenceMapFactory({ project, countryCode });
  const actual = mapperfx(ecotaxaDOIObject);
  assertEquals(actual, expected);
});

test(`dynamicProperties`, () => {
  const mapperfx = occurrenceMapFactory({
    project,
    countryCode,
    dynamicProperties: true,
  });
  const actual = mapperfx(ecotaxaDOIObject);
  assertEquals(actual.dynamicProperties, expectedDynamic);
});

test(`dynamicProperties (function)`, () => {
  const dynamicProperties = (rest, dwc) =>
    Object.fromEntries(
      Object.entries(rest).filter(([k, v]) => /^img_/.test(k))
    );

  const mapperfx = occurrenceMapFactory({
    project,
    countryCode,
    dynamicProperties,
  });
  const actual = mapperfx(ecotaxaDOIObject);
  assertObjectMatch(actual, {
    ...expected,
    dynamicProperties: {
      img_rank: 0,
    },
  });
});
